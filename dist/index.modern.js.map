{"version":3,"file":"index.modern.js","sources":["../src/v1/components/CustomCheckBox.jsx","../src/v1/components/CustomHeader.jsx","../src/v1/components/CustomRadioGroup.jsx","../src/v1/components/CustomSelect.jsx","../src/v1/components/CustomTextInput.jsx","../src/v1/utils/validations.js","../src/v1/utils/getInputs.js","../src/v1/DynamicForm.jsx","../src/index.tsx"],"sourcesContent":["import React from 'react'\nimport { ErrorMessage, useField } from 'formik'\n\nimport styles from '../../styles.module.css'\n\nexport const CustomCheckBox = (props) => {\n  const [field] = useField(props)\n\n  return (\n    <label className={`label_check ${props.classes}`}>\n      <div className={styles.inline}>\n        <input type='checkbox' {...field} {...props} id={props.name} />\n        <label htmlFor={props.name} style={{ marginLeft: '10px' }}>\n          {props.label}\n        </label>\n      </div>\n      <ErrorMessage name={props.name} component='span' className='error' />\n    </label>\n  )\n}\n","import React from 'react'\n\nexport const CustomHeader = (props) => {\n  const localStyle = {\n    marginBottom: 0\n  }\n\n  return (\n    <h3 style={localStyle} className={`section-header ${props.classes}`}>\n      {props.text}\n    </h3>\n  )\n}\n","import React from 'react'\nimport { useField, ErrorMessage } from 'formik'\n\nimport styles from '../../styles.module.css'\n\nexport const CustomRadioGroup = ({ label, options, ...props }) => {\n  const [field] = useField(props)\n\n  return (\n    <div className={`radio-group ${props.classes}`}>\n      <div\n        className={props.inline && props.inline === 'true' ? styles.inline : ''}\n      >\n        <label>{label}</label>\n        <div\n          className={`${styles.options} ${\n            props.inlineopts === 'true' ? styles.inlineOpt : styles.columnOpt\n          }`}\n        >\n          {options.map((opt, index) => (\n            <div className={`${styles.opt}`} key={opt.value}>\n              <input\n                {...field}\n                {...props}\n                type='radio'\n                value={opt.value}\n                checked={opt.value === field.value}\n                id={`opt_${opt.value}_${index}`}\n              />\n              <label htmlFor={`opt_${opt.value}_${index}`}>{opt.desc}</label>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <ErrorMessage name={props.name} component='span' className='error' />\n    </div>\n  )\n}\n","import React from 'react'\nimport { ErrorMessage, useField } from 'formik'\n\nimport styles from '../../styles.module.css'\n\nexport const CustomSelect = ({ label, options, ...props }) => {\n  const [field] = useField(props)\n\n  return (\n    <div className={`select ${props.classes}`}>\n      <div\n        className={props.inline && props.inline === 'true' ? styles.inline : ''}\n      >\n        <label htmlFor={props.name || props.id}> {label} </label>\n\n        <select {...field} {...props} id={props.name}>\n          <option value=''>--- Select an option ---</option>\n\n          {options.map(({ desc, value }, index) => (\n            <option value={value} key={`select_option_${index}`}>\n              {desc}\n            </option>\n          ))}\n        </select>\n      </div>\n      <ErrorMessage name={props.name} component='span' className='error' />\n    </div>\n  )\n}\n","import React from 'react'\nimport { ErrorMessage, useField } from 'formik'\n\nimport styles from '../../styles.module.css'\n\nexport const CustomTextInput = (props) => {\n  const [field] = useField(props)\n\n  return (\n    <div className={`input-box ${props.classes}`}>\n      <div\n        className={props.inline && props.inline === 'true' ? styles.inline : ''}\n      >\n        {props.label && <label htmlFor={props.name}>{props.label}</label>}\n        <input {...field} {...props} id={props.name} />\n      </div>\n      <ErrorMessage\n        name={props.name}\n        component='span'\n        className={`error ${styles.error}`}\n      />\n    </div>\n  )\n}\n","import * as Yup from 'yup'\n\nexport const booleanValidations = (validations) => {\n  let schema = Yup.boolean().strict()\n\n  for (const rule of validations) {\n    switch (rule.type) {\n      case 'isTrue':\n        schema = schema.isTrue(rule.message)\n        break\n      case 'isFalse':\n        schema = schema.isFalse(rule.message)\n        break\n      case 'required':\n        schema = schema.required(rule.message)\n        break\n    }\n  }\n\n  return schema\n}\n\nexport const numberValidations = (validations) => {\n  let schema = Yup.number().strict()\n\n  for (const rule of validations) {\n    switch (rule.type) {\n      case 'min':\n        schema = schema.min(rule?.value, rule.message)\n        break\n      case 'max':\n        schema = schema.max(rule?.value, rule.message)\n        break\n      case 'lessThan':\n        schema = schema.lessThan(rule?.value, rule.message)\n        break\n      case 'moreThan':\n        schema = schema.moreThan(rule?.value, rule.message)\n        break\n      case 'positive':\n        schema = schema.positive(rule.message)\n        break\n      case 'negative':\n        schema = schema.negative(rule.message)\n        break\n      case 'integer':\n        schema = schema.integer(rule.message)\n        break\n      case 'required':\n        schema = schema.required(rule.message)\n        break\n    }\n  }\n\n  return schema\n}\n\nexport const dateValidations = (validations) => {\n  let schema = Yup.date().strict()\n\n  for (const rule of validations) {\n    switch (rule.type) {\n      case 'min':\n        schema = schema.min(rule?.value, rule.message)\n        break\n      case 'max':\n        schema = schema.max(rule?.value, rule.message)\n        break\n      case 'required':\n        schema = schema.required(rule.message)\n        break\n    }\n  }\n\n  return schema\n}\n\nexport const stringValidations = (validations) => {\n  let schema = Yup.string().strict()\n\n  for (const rule of validations) {\n    switch (rule.type) {\n      case 'isEmail':\n        schema = schema.email(rule.message)\n        break\n      case 'isUrl':\n        schema = schema.url(rule.message)\n        break\n      case 'isUuid':\n        schema = schema.uuid(rule.message)\n        break\n      case 'lowercase':\n        schema = schema.lowercase(rule.message)\n        break\n      case 'uppercase':\n        schema = schema.uppercase(rule.message)\n        break\n      case 'minLength':\n        schema = schema.min(rule?.value, rule.message)\n        break\n      case 'maxLength':\n        schema = schema.max(rule?.value, rule.message)\n        break\n      case 'length':\n        schema = schema.length(rule?.value, rule.message)\n        break\n      case 'regex':\n        schema = schema.matches(rule?.value, {\n          excludeEmptyString: true,\n          message: rule.message\n        })\n        break\n      case 'required':\n        schema = schema.required(rule.message)\n        break\n    }\n  }\n\n  return schema\n}\n","import * as Yup from 'yup'\nimport * as Validations from './validations'\n\nconst generateValidations = (field) => {\n  switch (field.typeValue) {\n    case 'boolean':\n      return Validations.booleanValidations(field.validations)\n    case 'number':\n      return Validations.numberValidations(field.validations)\n    case 'date':\n      return Validations.dateValidations(field.validations)\n    default:\n      return Validations.stringValidations(field.validations)\n  }\n}\n\n// section: Form\nexport const getInputs = (inputs) => {\n  // initialValues: { [key: string]: any }\n  const initialValues = {}\n  // validationsFields: { [key: string]: any }\n  const validationsFields = {}\n\n  for (const field of inputs) {\n    initialValues[field.name] = field.value\n\n    if (!field.validations) continue\n\n    const schema = generateValidations(field)\n    validationsFields[field.name] = schema\n  }\n\n  return {\n    validationSchema: Yup.object().shape({ ...validationsFields }),\n    initialValues\n  }\n}\n","import React from 'react'\nimport { Form, Formik } from 'formik'\n\nimport {\n  CustomCheckBox,\n  CustomHeader,\n  CustomRadioGroup,\n  CustomSelect,\n  CustomTextInput\n} from './components'\n\nimport { getInputs } from './utils'\n\nexport const DynamicForm = ({\n  formInputs,\n  onSubmit = (values) => console.log(values),\n  resetOnSubmit = true\n}) => {\n  const inputs = formInputs.filter(\n    (input) =>\n      input.type !== 'header' &&\n      input.type !== 'submit' &&\n      input.type !== 'reset'\n  )\n\n  const { initialValues, validationSchema } = getInputs(inputs)\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={(values, helpers) => {\n        onSubmit(values)\n        if (resetOnSubmit) helpers.resetForm()\n      }}\n    >\n      {() => (\n        <Form noValidate>\n          {formInputs.map(({ name, type, value, ...props }) => {\n            switch (type) {\n              // Headers\n              case 'header':\n                return (\n                  <CustomHeader\n                    text={props.text}\n                    key={`header_${props.text\n                      .replace(' ', '_')\n                      .toString()\n                      .toLowerCase()}`}\n                    classes={props.class}\n                  />\n                )\n\n              // Inputs\n              case 'select':\n                return (\n                  <CustomSelect\n                    key={name}\n                    label={props?.label}\n                    name={name}\n                    options={props?.options}\n                    classes={props.class}\n                    inline={props?.inline}\n                  />\n                )\n\n              case 'radio-group':\n                return (\n                  <CustomRadioGroup\n                    label={props?.label}\n                    name={name}\n                    options={props?.options}\n                    key={name}\n                    classes={props.class}\n                    inline={props?.inline}\n                    inlineopts={props?.inlineOpts}\n                  />\n                )\n\n              case 'checkbox':\n                return (\n                  <CustomCheckBox\n                    label={props?.label}\n                    key={name}\n                    name={name}\n                    classes={props.class}\n                  />\n                )\n\n              default:\n                return (\n                  <CustomTextInput\n                    key={name}\n                    name={name}\n                    placeholder={props?.placeholder}\n                    inline={props?.inline}\n                    label={props?.label}\n                    type={type}\n                    classes={props.class}\n                  />\n                )\n            }\n          })}\n        </Form>\n      )}\n    </Formik>\n  )\n}\n","import * as React from 'react'\nimport styles from './styles.module.css'\n\nimport { DynamicForm } from './v1'\n\ninterface Props {\n  text: string\n}\n\nexport const ExampleComponent = ({ text }: Props) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\nexport { DynamicForm }\n"],"names":["CustomCheckBox","props","field","useField","React","createElement","className","classes","styles","inline","Object","assign","type","id","name","htmlFor","style","marginLeft","label","ErrorMessage","component","CustomHeader","localStyle","marginBottom","text","CustomRadioGroup","options","inlineopts","inlineOpt","columnOpt","map","opt","index","key","value","checked","desc","CustomSelect","CustomTextInput","error","booleanValidations","validations","schema","Yup","strict","rule","isTrue","message","isFalse","required","numberValidations","min","max","lessThan","moreThan","positive","negative","integer","dateValidations","stringValidations","email","url","uuid","lowercase","uppercase","length","matches","excludeEmptyString","generateValidations","typeValue","Validations","getInputs","inputs","initialValues","validationsFields","validationSchema","shape","DynamicForm","formInputs","onSubmit","values","console","log","resetOnSubmit","filter","input","Formik","helpers","resetForm","Form","noValidate","replace","toString","toLowerCase","class","inlineOpts","placeholder","ExampleComponent","test"],"mappings":"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"}