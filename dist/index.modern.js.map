{"version":3,"file":"index.modern.js","sources":["../src/components/CustomCheckBox.jsx","../src/components/CustomHeader.jsx","../src/components/CustomRadioGroup.jsx","../src/components/CustomSelect.jsx","../src/components/CustomTextInput.jsx","../src/utils/validations.js","../src/utils/getInputs.js","../src/index.js"],"sourcesContent":["import React from 'react';\r\nimport { ErrorMessage, useField } from \"formik\"\r\n\r\nimport styles from '../styles.module.css'\r\n\r\nexport const CustomCheckBox = (props) => {\r\n    const [field] = useField(props)\r\n\r\n    return (\r\n        <label className={`label_check ${props.classes}`}>\r\n            <div className={styles.inline}>\r\n                <input type=\"checkbox\" {...field} {...props} id={props.name}/>\r\n                <label htmlFor={props.name} style={{marginLeft: '10px'}}>{props.label}</label>  \r\n            </div>\r\n            <ErrorMessage name={props.name} component=\"span\" className=\"error\" />\r\n        </label>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CustomHeader = (props) => {\r\n  let localStyle = {\r\n    marginBottom: 0\r\n  }\r\n\r\n  return (\r\n    <h3 style={localStyle} className={`section-header ${props.classes}`}>\r\n      {props.text}\r\n    </h3>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useField, ErrorMessage } from 'formik';\r\n\r\nimport styles from '../styles.module.css'\r\n\r\nexport const CustomRadioGroup = ({ label, options, ...props }) => {\r\n  const [field] = useField(props)\r\n\r\n  return (\r\n    <div className={`radio-group ${props.classes}`}>\r\n      <div className={props.inline && props.inline === 'true' ? styles.inline : ''}>\r\n        <label>{label}</label>\r\n        <div className={`${styles.options} ${props.inlineopts === 'true' ? styles.inlineOpt : styles.columnOpt}`}>\r\n          {\r\n            options.map((opt, index) => (\r\n              <div\r\n                className={`${styles.opt}`}\r\n                key={opt.value}>\r\n                <input\r\n                  {...field}\r\n                  {...props}\r\n                  type=\"radio\"\r\n                  value={opt.value}\r\n                  checked={opt.value === field.value}\r\n                  id={`opt_${opt.value}_${index}`}\r\n                />\r\n                <label htmlFor={`opt_${opt.value}_${index}`}>\r\n                  {opt.desc}\r\n                </label>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <ErrorMessage name={props.name} component=\"span\" className=\"error\" />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { ErrorMessage, useField } from \"formik\"\r\n\r\nimport styles from '../styles.module.css'\r\n\r\nexport const CustomSelect = ({ label, options, ...props }) => {\r\n  const [field] = useField(props)\r\n\r\n  return (\r\n    <div className={`select ${props.classes}`}>\r\n      <div className={props.inline && props.inline === 'true' ? styles.inline : ''}>\r\n        <label htmlFor={props.name || props.id}> {label} </label>\r\n\r\n        <select {...field} {...props} id={props.name}>\r\n          <option value=\"\">--- Select an option ---</option>\r\n\r\n          {\r\n            options.map(({ desc, value }, index) => (\r\n              <option value={value} key={`select_option_${index}`}>\r\n                {desc}\r\n              </option>\r\n            ))\r\n          }\r\n\r\n        </select>\r\n      </div>\r\n      <ErrorMessage name={props.name} component=\"span\" className=\"error\" />\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { ErrorMessage, useField } from \"formik\"\r\n\r\nimport styles from '../styles.module.css'\r\n\r\nexport const CustomTextInput = (props) => {\r\n    const [field] = useField(props)\r\n\r\n    return (\r\n        <div className={`input-box ${props.classes}`}>\r\n            <div className={props.inline && props.inline === 'true' ? styles.inline : ''}>\r\n                {\r\n                    props.label &&\r\n                    <label htmlFor={props.name}>{props.label}</label>\r\n                }\r\n                <input {...field} {...props} id={props.name} />\r\n            </div>\r\n            <ErrorMessage name={props.name} component=\"span\" className={`error ${styles.error}`} />\r\n        </div>\r\n    )\r\n}\r\n","import * as Yup from 'yup'\r\n\r\nexport const booleanValidations = (validations) => {\r\n    let schema = Yup.boolean().strict()\r\n\r\n    for (const rule of validations) {\r\n        switch (rule.type) {\r\n            case 'isTrue':\r\n                schema = schema.isTrue(rule.message)\r\n                break;\r\n            case 'isFalse':\r\n                schema = schema.isFalse(rule.message)\r\n                break;\r\n            case 'required':\r\n                schema = schema.required(rule.message)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return schema\r\n}\r\n\r\nexport const numberValidations = (validations) => {\r\n    let schema = Yup.number().strict()\r\n\r\n    for (const rule of validations) {\r\n        switch (rule.type) {\r\n            case 'min':\r\n                schema = schema.min(rule?.value, rule.message)\r\n                break;\r\n            case 'max':\r\n                schema = schema.max(rule?.value, rule.message)\r\n                break;\r\n            case 'lessThan':\r\n                schema = schema.lessThan(rule?.value, rule.message)\r\n                break;\r\n            case 'moreThan':\r\n                schema = schema.moreThan(rule?.value, rule.message)\r\n                break;\r\n            case 'positive':\r\n                schema = schema.positive(rule.message)\r\n                break;\r\n            case 'negative':\r\n                schema = schema.negative(rule.message)\r\n                break;\r\n            case 'integer':\r\n                schema = schema.integer(rule.message)\r\n                break;\r\n            case 'required':\r\n                schema = schema.required(rule.message)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return schema\r\n}\r\n\r\nexport const dateValidations = (validations) => {\r\n    let schema = Yup.date().strict()\r\n\r\n    for (const rule of validations) {\r\n        switch (rule.type) {\r\n            case 'min':\r\n                schema = schema.min(rule?.value, rule.message)\r\n                break;\r\n            case 'max':\r\n                schema = schema.max(rule?.value, rule.message)\r\n                break;\r\n            case 'required':\r\n                schema = schema.required(rule.message)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return schema\r\n}\r\n\r\nexport const stringValidations = (validations) => {\r\n    let schema = Yup.string().strict()\r\n\r\n    for (const rule of validations) {\r\n        switch (rule.type) {\r\n            case 'isEmail':\r\n                schema = schema.email(rule.message)\r\n                break;\r\n            case 'isUrl':\r\n                schema = schema.url(rule.message)\r\n                break;\r\n            case 'isUuid':\r\n                schema = schema.uuid(rule.message)\r\n                break;\r\n            case 'lowercase':\r\n                schema = schema.lowercase(rule.message)\r\n                break;\r\n            case 'uppercase':\r\n                schema = schema.uppercase(rule.message)\r\n                break;\r\n            case 'minLength':\r\n                schema = schema.min(rule?.value, rule.message)\r\n                break;\r\n            case 'maxLength':\r\n                schema = schema.max(rule?.value, rule.message)\r\n                break;\r\n            case 'length':\r\n                schema = schema.length(rule?.value, rule.message)\r\n                break;\r\n            case 'regex':\r\n                schema = schema.matches(rule?.value, { excludeEmptyString: true, message: rule.message })\r\n                break;\r\n            case 'required':\r\n                schema = schema.required(rule.message)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return schema\r\n}","import * as Yup from 'yup'\r\nimport * as Validations from './validations'\r\n\r\nconst generateValidations = (field) => {\r\n    let schema\r\n\r\n    switch (field.typeValue) {\r\n        case 'boolean':\r\n            return schema = Validations.booleanValidations(field.validations)\r\n        case 'number':\r\n            return schema = Validations.numberValidations(field.validations)\r\n        case 'date':\r\n            return schema = Validations.dateValidations(field.validations)\r\n        default:\r\n            return schema = Validations.stringValidations(field.validations)\r\n    }\r\n}\r\n\r\n// section: Form\r\nexport const getInputs = (inputs) => {\r\n\r\n    // initialValues: { [key: string]: any }\r\n    let initialValues = {};\r\n\r\n    // validationsFields: { [key: string]: any }\r\n    let validationsFields = {};\r\n\r\n    for (const field of inputs) {\r\n        initialValues[field.name] = field.value\r\n\r\n        if (!field.validations) continue;\r\n\r\n        const schema = generateValidations(field)\r\n        validationsFields[field.name] = schema\r\n    }\r\n\r\n    return {\r\n        validationSchema: Yup.object().shape({ ...validationsFields }),\r\n        initialValues\r\n    }\r\n};","import React from 'react'\n\nimport { Form, Formik } from 'formik'\n\nimport {\n  CustomCheckBox,\n  CustomHeader,\n  CustomRadioGroup,\n  CustomSelect,\n  CustomTextInput\n} from './components'\n\nimport { getInputs } from './utils'\n\nexport const DynamicForm = ({\n  formInputs,\n  onSubmit = (values) => console.log(values),\n  resetOnSubmit = true\n}) => {\n  let inputs = formInputs.filter(input =>\n    input.type != 'header'\n    && input.type != 'submit'\n    && input.type != 'reset'\n  )\n\n  const { initialValues, validationSchema } = getInputs(inputs)\n\n  return <Formik initialValues={initialValues}\n    validationSchema={validationSchema}\n    onSubmit={(values, helpers) => {\n      onSubmit(values);\n      if (resetOnSubmit) helpers.resetForm();\n    }}\n  >\n    {\n      () => (\n        <Form noValidate>\n          {\n            formInputs.map(({ name, type, value, ...props }) => {\n              switch (type) {\n                // Headers\n                case 'header':\n                  return <CustomHeader\n                    text={props.text}\n                    key={`header_${props.text.replace(' ', '_').toString().toLowerCase()}`}\n                    classes={props.class} />\n\n                // Inputs\n                case 'select':\n                  return <CustomSelect\n                    key={name}\n                    label={props?.label}\n                    name={name}\n                    options={props?.options}\n                    classes={props.class}\n                    inline={props?.inline} />\n\n                case 'radio-group':\n                  return <CustomRadioGroup\n                    label={props?.label}\n                    name={name}\n                    options={props?.options}\n                    key={name}\n                    classes={props.class}\n                    inline={props?.inline}\n                    inlineopts={props?.inlineOpts} />\n\n                case 'checkbox':\n                  return <CustomCheckBox\n                    label={props?.label}\n                    key={name}\n                    name={name}\n                    classes={props.class} />\n\n                default:\n                  return <CustomTextInput\n                    key={name}\n                    name={name}\n                    placeholder={props?.placeholder}\n                    inline={props?.inline}\n                    label={props?.label}\n                    type={type}\n                    classes={props.class} />\n              }\n            })\n          }\n        </Form>\n      )\n    }\n\n  </Formik>\n}\n"],"names":["CustomCheckBox","props","useField","field","classes","styles","inline","name","marginLeft","label","CustomHeader","localStyle","marginBottom","text","CustomRadioGroup","options","inlineopts","inlineOpt","columnOpt","map","opt","index","value","desc","CustomSelect","id","CustomTextInput","error","booleanValidations","validations","schema","Yup","strict","rule","type","isTrue","message","isFalse","required","numberValidations","min","max","lessThan","moreThan","positive","negative","integer","dateValidations","stringValidations","email","url","uuid","lowercase","uppercase","length","matches","excludeEmptyString","generateValidations","typeValue","Validations","getInputs","inputs","initialValues","validationsFields","validationSchema","shape","DynamicForm","formInputs","onSubmit","values","console","log","resetOnSubmit","filter","input","helpers","resetForm","replace","toString","toLowerCase","inlineOpts","placeholder"],"mappings":"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"}