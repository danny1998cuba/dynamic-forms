{"version":3,"file":"index.js","sources":["../src/components/CustomCheckBox.jsx","../src/components/CustomRadioGroup.jsx","../src/components/CustomSelect.jsx","../src/components/CustomTextInput.jsx","../src/utils/getInputs.js","../src/index.js"],"sourcesContent":["import React from 'react';\r\nimport { ErrorMessage, useField } from \"formik\"\r\n\r\nexport const CustomCheckBox = (props) => {\r\n    const [field] = useField(props)\r\n\r\n    return (\r\n        <label className={`label_check ${props.classes}`}>\r\n            <input type=\"checkbox\" {...field} {...props} />\r\n            <span>{props.label}</span>\r\n            <ErrorMessage name={props.name} component=\"span\" className=\"error\" />\r\n        </label>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { useField, ErrorMessage } from 'formik';\r\n\r\nexport const CustomRadioGroup = ({ label, options, ...props }) => {\r\n  const [field] = useField(props)\r\n\r\n  return (\r\n    <div className={`radio-group ${props.classes}`}>\r\n      <b>{label}</b>\r\n      {\r\n        options.map(opt => (\r\n          <label key={opt.value}>\r\n            <input\r\n              {...field}\r\n              {...props}\r\n              type=\"radio\"\r\n              value={opt.value}\r\n              checked={opt.value === field.value}\r\n            />\r\n            {opt.desc}\r\n          </label>\r\n        ))\r\n      }\r\n      <ErrorMessage name={props.name} component=\"span\" className=\"error\" />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { ErrorMessage, useField } from \"formik\"\r\n\r\nexport const CustomSelect = ({ label, options, ...props }) => {\r\n  const [field] = useField(props)\r\n\r\n  return (\r\n    <div className={`select ${props.classes}`}>\r\n      <label htmlFor={props.name || props.id}> {label} </label>\r\n\r\n      <select {...field} {...props} >\r\n\r\n        <option value=\"\">--- Select ---</option>\r\n\r\n        {\r\n          options.map(({ desc, value }) => (\r\n            <option\r\n              value={value}\r\n              key={value}\r\n            >{desc}</option>\r\n          ))\r\n        }\r\n\r\n      </select>\r\n      <ErrorMessage name={props.name} component=\"span\" className=\"error\" />\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { ErrorMessage, useField } from \"formik\"\r\n\r\nexport const CustomTextInput = (props) => {\r\n    const [field] = useField(props)\r\n\r\n    return (\r\n        <div className={`input-box ${props.classes}`}>\r\n            <input {...field} {...props} />\r\n            <ErrorMessage name={props.name} component=\"span\" className=\"error\" />\r\n        </div>\r\n    )\r\n}\r\n","import * as Yup from 'yup'\r\n\r\nconst generateValidations = (field) => {\r\n    console.log('>>', field.name);\r\n    let schema = field.typeValue === 'boolean' ? Yup.boolean() : Yup.string()\r\n\r\n    for (const rule of field.validations) {\r\n        console.log(rule.type);\r\n        switch (rule.type) {\r\n            case 'isTrue':\r\n                schema = schema.isTrue(rule.message)\r\n                break;\r\n            case 'isEmail':\r\n                schema = schema.email(rule.message)\r\n                break;\r\n            case 'minLength':\r\n                schema = schema.min(rule?.value, rule.message)\r\n                break;\r\n            case 'maxLength':\r\n                schema = schema.max(rule?.value, rule.message)\r\n                break;\r\n            case 'regex':\r\n                schema = schema.matches(rule?.value, rule.message)\r\n                break;\r\n            case 'match':\r\n                schema = schema.oneOf(\r\n                    rule?.value.map(el => Yup.ref(el)),\r\n                    rule.message)\r\n                break;\r\n            default:\r\n                schema = schema.required()\r\n                break;\r\n        }\r\n        console.log(schema);\r\n    }\r\n\r\n    console.log(field.name, schema);\r\n\r\n    return schema\r\n}\r\n\r\n// section: Form\r\nexport const getInputs = (inputs) => {\r\n\r\n    // initialValues: { [key: string]: any }\r\n    let initialValues = {};\r\n\r\n    // validationsFields: { [key: string]: any }\r\n    let validationsFields = {};\r\n\r\n    for (const field of inputs) {\r\n        initialValues[field.name] = field.value\r\n\r\n        if (!field.validations) continue;\r\n\r\n        const schema = generateValidations(field)\r\n        validationsFields[field.name] = schema\r\n    }\r\n\r\n    return {\r\n        validationSchema: Yup.object().shape({ ...validationsFields }),\r\n        initialValues\r\n    }\r\n};","import React from 'react'\n\nimport { Form, Formik } from 'formik'\n\nimport {\n  CustomCheckBox,\n  CustomRadioGroup,\n  CustomSelect,\n  CustomTextInput\n} from './components'\n\nimport { getInputs } from './utils'\n\nexport const DynamicForm = ({\n  formInputs,\n  onSubmit = (values) => console.log(values)\n}) => {\n  const { initialValues, validationSchema } = getInputs(formInputs)\n\n  console.log(validationSchema);\n\n  return <Formik initialValues={initialValues}\n    validationSchema={validationSchema}\n    onSubmit={onSubmit}\n  >\n    {\n      () => (\n        <Form noValidate>\n          {\n            formInputs.map(({ name, type, value, ...props }) => {\n              switch (type) {\n                case 'select':\n                  return <CustomSelect\n                    key={name}\n                    label={props?.label}\n                    name={name}\n                    options={props?.options}\n                    classes={props.class} />\n                case 'radio-group':\n                  return <CustomRadioGroup\n                    label={props?.label}\n                    name={name}\n                    options={props?.options}\n                    key={name}\n                    classes={props.class} />\n                case 'checkbox':\n                  return <CustomCheckBox\n                    label={props?.label}\n                    key={name}\n                    name={name}\n                    classes={props.class} />\n                default:\n                  return <CustomTextInput\n                    key={name}\n                    name={name}\n                    placeholder={props.placeholder}\n                    type={type}\n                    classes={props.class} />\n              }\n            })\n          }\n        </Form>\n      )\n    }\n\n  </Formik>\n}\n"],"names":["CustomCheckBox","props","useField","field","classes","label","ErrorMessage","name","CustomRadioGroup","options","map","opt","value","desc","CustomSelect","id","CustomTextInput","generateValidations","console","log","schema","typeValue","Yup","validations","rule","type","isTrue","message","email","min","max","matches","oneOf","el","required","getInputs","inputs","initialValues","validationsFields","validationSchema","shape","DynamicForm","formInputs","onSubmit","values","Formik","Form","placeholder"],"mappings":"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"}